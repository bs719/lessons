'=========================Функции=================='
# функции - именнованный блок кода, который может принимать аргументы и возвращать результат

# def my_sum(x,y):     # x, y - параметры
    # a = x + y
    # return x + y

# res = my_sum(5,10)   # 5, 10 - аргументы
# print(res)


# def black(num):
    # res
    # return


# def hello_world():
    # print('Hello')
    # 
# hello_world()



#def my_len(a):
#    count = 0
#    for i in a:
        # count = count + 1
    # return count       #3

# print(my_len([12, 'hi', 0]))   #3

# print(len([12, 'hi', 0]))   #3
# a = [12, 'hi', 0] 


'Функции соблюдают принцип DRY(don"t repeat yourself)'

'=======================Аргументы и параметры========================='
# Параметры - переменные внутри функции, параметры мы создаем когда создаем функцию
# Аргументы - значения, которое мы передаем при вызове функции


# def func(a,b):    #a,b - параметры
    # print(a,b)    

# func(10,3)        #10,3 - аргументы

'=========================Виды параметров======================'

#1. обязательные
#2. необязательные
#2.1 с дефолтом (со значением по умолчанию)
#2.2 *args (все позиционные аргументы, которые не попали в обязательные и с дефолтом)
#2.3 **kwargs (все лишние именованные аргументы)


'========================Виды аргументов======================='

#1. позиционные (по позиции)
#2. именованные (по названию (параметр=значение))

# def func(num1, num2):
    # print(num1 + num2)
    # pass / ... #заглушка на ошибку
    # 
# func(20,10)


# def func(a,b,c, *args, **kwargs):
    # print(a)
    # print(b)
    # print(*args)
    # print(kwargs)
    # 
# func(5,1,10,4,2,5,1, hello='hi', abc = '123123')


# def div(num1,num2):
    # if num2 == 0:
        # print('На ноль делить нельзя!')
    # else:
        # print(num1/num2)
        
# div(20,0)


# def div(num1, num2):
    # try:
        # print(num1/num2)
    # except ZeroDivisionError:
        # print('На ноль делить нельзя!')
        
# div(20,5)